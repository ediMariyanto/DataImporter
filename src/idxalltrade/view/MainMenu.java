package idxalltrade.view;

import idxalltrade.connection.idxalltradeConnection;
import idxalltrade.controller.idxalltradeController;
import idxalltrade.model.idxAllTradeModel;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Cakra
 */
public class MainMenu extends javax.swing.JFrame
{

    idxalltradeConnection conect;
    idxalltradeController idxCtr;
    idxAllTradeModel idxMdl;
    String chooserTitle;
    private SimpleDateFormat formatDate;
    private DefaultComboBoxModel cbm;
    private BufferedReader in;
    private final idxalltradeConnection idxConn = new idxalltradeConnection();
    private Connection con = null;

    public MainMenu()
    {
        initComponents();
        this.setLocationRelativeTo(null);
        setDataChannel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        dateTransaction = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        cbChannel = new javax.swing.JComboBox<>();
        cbOrderSource = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSelectFile = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        btnImport = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        progressBar = new javax.swing.JProgressBar();
        btnTestConnection = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Upload Transaction V..0.0.1");
        setLocationByPlatform(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setText("Transaction Date :");

        dateTransaction.setAutoscrolls(true);
        dateTransaction.setDateFormatString("yy/MM/dd");
        dateTransaction.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("Channel  :");

        cbChannel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        cbChannel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbChannel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbChannelActionPerformed(evt);
            }
        });

        cbOrderSource.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("Order Source :");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel4.setText("Select File :");

        txtSelectFile.setEditable(false);
        txtSelectFile.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        btnSearch.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        btnSearch.setText("...");
        btnSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnImportActionPerformed(evt);
            }
        });

        progressBar.setStringPainted(true);

        btnTestConnection.setText("Test Connection");
        btnTestConnection.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnTestConnectionActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSearch))
                                .addComponent(dateTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbChannel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbOrderSource, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnTestConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                        .addComponent(jSeparator3)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(dateTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbChannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbOrderSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTestConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbChannelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbChannelActionPerformed
    {//GEN-HEADEREND:event_cbChannelActionPerformed
        cbOrderSource.removeAllItems();
        try
        {
            selectOrderSource();
        } catch (Exception e)
        {
        }
    }//GEN-LAST:event_cbChannelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchActionPerformed
    {//GEN-HEADEREND:event_btnSearchActionPerformed
        try
        {
            selectFile();
        } catch (Exception ex)
        {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnImportActionPerformed
    {//GEN-HEADEREND:event_btnImportActionPerformed
        try
        {
            importFile();
        } catch (ParseException | SQLException ex)
        {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnTestConnectionActionPerformed
    {//GEN-HEADEREND:event_btnTestConnectionActionPerformed
        testConnection();
    }//GEN-LAST:event_btnTestConnectionActionPerformed

    private void importFile() throws ParseException, SQLException
    {

        try
        {
            in = new BufferedReader(new FileReader(txtSelectFile.getText()));
            formatDate = new SimpleDateFormat("dd/mm/yy");
            idxMdl = new idxAllTradeModel();
            String str;
            int i = 0;
            while ((str = in.readLine()) != null)
            {
                progressBar.setValue(10);
                i = i + 1;
                idxMdl.setIdxorderid(i);
                String strConv = str.replaceAll("\"", "");
                String data[] = strConv.split(";");
                Date tradeDate = formatDate.parse(data[1]);
                Date MTime = formatDate.parse("17/02/2017");
                
                idxMdl.setMtIme(MTime);
                idxMdl.setMktid(data[0]);
                idxMdl.setTradedate(tradeDate);
                idxMdl.setStockcode(data[2]);
                idxMdl.setBs(data[3]);
                idxMdl.setExrefcode(data[4]);
                idxMdl.setMqty(Integer.parseInt(data[5]));
                idxMdl.setMprice(Integer.parseInt(data[6]));
                idxMdl.setBoardcode(data[7]);
                idxMdl.setIdxtradeid(data[8]);
                idxMdl.setChannelcode(cbChannel.getSelectedItem().toString());
                idxMdl.setOrdsource(cbOrderSource.getSelectedItem().toString());

                String sql = "INSERT INTO main.IDX_ALLTRADE\n"
                        + " (IDXTRADEID\n"
                        + " ,IDXORDERID\n"
                        + " ,TRADEDATE\n"
                        + " ,STOCKCODE\n"
                        + " ,BOARDCODE\n"
                        + " ,MKTID\n"
                        + " ,BS\n"
                        //+ " ,MTIME\n"
                        + " ,MQTY\n"
                        + " ,LOTSIZE\n"
                        + " ,MPRICE\n"
                        + " ,CPBROKER\n"
                        + " ,CPDEALER\n"
                        //+ " ,MODDA\n"
                        + " ,MODUI\n"
                        // + " ,INSDA\n"
                        + " ,INSUI\n"
                        + " ,SID\n"
                        + " ,BRKREFF\n"
                        + " ,EXTREF_CODE\n"
                        + " ,ALLOCQTY\n"
                        + " ,ALLOC\n"
                        + " ,ACCINIT\n"
                        + " ,TRDMEMO\n"
                        + " ,ACCID\n"
                        + " ,ORDSOURCE\n"
                        + " ,DEALTICKETID\n"
                        + " ,ORDERCODE\n"
                        + " ,ISGENERATED\n"
                        + " ,ACCSOPID\n"
                        + " ,CHANNELCODE)\n"
                        + " VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                this.con = this.idxConn.getConnection();
                PreparedStatement ps = this.con.prepareStatement(sql);
                ps.setString(1, idxMdl.getIdxtradeid());
                
                ps.setInt(2, idxMdl.getIdxorderid());
                progressBar.setValue(20);
                ps.setDate(3, new java.sql.Date(idxMdl.getTradedate().getTime()));
                progressBar.setValue(30);
                ps.setString(4, "AALI");//idxMdl.getStockcode());
                progressBar.setValue(40);
                ps.setString(5, idxMdl.getBoardcode());
                progressBar.setValue(50);
                ps.setString(6, idxMdl.getMktid());
                ps.setString(7, idxMdl.getBs());
                ps.setDate(8, new java.sql.Date(idxMdl.getMtIme().getTime())); 
                ps.setFloat(8, idxMdl.getMqty());
                ps.setFloat(9, idxMdl.getLotsize());
                ps.setFloat(10, idxMdl.getMprice());
                ps.setString(11, idxMdl.getCpbroker());
                ps.setString(12, idxMdl.getCpdealer());
                // ps.setDate(13, new java.sql.Date (idxMdl.getModda().getTime()));
                ps.setString(13, idxMdl.getModui());
                // ps.setDate(15, new java.sql.Date (idxMdl.getInsda().getTime()));
                ps.setString(14, idxMdl.getInsui());
                ps.setString(15, idxMdl.getSid());
                ps.setString(16, idxMdl.getBrkreff());
                ps.setString(17, idxMdl.getExrefcode());
                ps.setFloat(18, idxMdl.getAllocqty());
                ps.setString(19, idxMdl.getAlloc());
                ps.setString(20, idxMdl.getAccinit());
                ps.setString(21, idxMdl.getTrdmemo());
                ps.setString(22, idxMdl.getAccinit());
                ps.setString(23, idxMdl.getOrdsource());
                ps.setInt(24, idxMdl.getDealticketId());
                ps.setString(25, idxMdl.getOrdercode());
                ps.setString(26, "1");  //idxMdl.getIsgeneretes());
                ps.setInt(27, idxMdl.getAccsopid());
                ps.setString(28, idxMdl.getChannelcode());
                ps.executeUpdate();
                progressBar.setValue(100);
            }
            JOptionPane.showMessageDialog(null, "Complate");
            try
            {
                in.close();
            } catch (IOException ex)
            {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            idxConn.closeConnection();

        } catch (IOException ex)
        {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDataChannel()
    {
        cbm = new DefaultComboBoxModel();
        idxCtr = new idxalltradeController();
        cbm = idxCtr.setListChannel();
        cbChannel.setModel(cbm);
    }

    private void selectFile() throws Exception
    {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(chooserTitle);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(this);

        File files = chooser.getSelectedFile();
        String pathFile = files.getAbsolutePath();
        txtSelectFile.setText(pathFile);

    }

    private void selectOrderSource()
    {
        switch (cbChannel.getSelectedIndex())
        {
            case 0:
            {
                cbOrderSource.addItem("Android");
                cbOrderSource.addItem("Black Berry");
                cbOrderSource.addItem("IPhone");
                break;
            }
            case 1:
            {
                cbOrderSource.addItem("Web");
                break;
            }
            case 2:
                cbOrderSource.addItem("Fidessa DMA");
                cbOrderSource.addItem("Fidessa Care");
                cbOrderSource.addItem("Desktop App");
                cbOrderSource.addItem("By Sales/Dealer");
                break;
            default:
                break;
        }
    }


    private void testConnection()
    {
        try
        {
            conect = new idxalltradeConnection();
            if (conect.getConnection().isClosed() == false)
            {
                JOptionPane.showMessageDialog(null, "Connection Successful");
            } else
            {
                JOptionPane.showMessageDialog(null, "Please Check Configuration Database",
                        "Connection Failed", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Please Check Configuration Database" + ex,
                    "Connection Failed", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new MainMenu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTestConnection;
    private javax.swing.JComboBox<String> cbChannel;
    private javax.swing.JComboBox<String> cbOrderSource;
    private com.toedter.calendar.JDateChooser dateTransaction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField txtSelectFile;
    // End of variables declaration//GEN-END:variables
}
